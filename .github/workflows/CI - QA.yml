name: CI using QA's Tests

on:
  push:
    branches: [main]
    tags-ignore:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COVERAGE_SINGLE: 80
      COVERAGE_TOTAL: 80

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.8 Test
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov

      - name: Checkout Own Repo to cloud
        uses: actions/checkout@v2
        with:
          repository: notyumin/SimpCity

      - name: Checkout private repo remotely
        uses: actions/checkout@v2
        with:
          repository: Aaron-CHM/SimpCity-QA
          path: tests
          token: ${{ secrets.QA_REMOTE }}
      - name: Linter Check with Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Begin Pytest
        run: |
          ls
          mv ./tests/*.* ./
          pytest --cov -v --junitxml=report.xml
          echo "check for report.xml:"
          ls
      - if: ${{failure()}}
        name: Create Issues
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Build Failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: workflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}

      - name: pytester-cov
        id: pytester-cov
        uses: alexanderdamiani/pytester-cov@v1.2.0
        with:
          pytest-root-dir: "."
          cov-omit-list: "test/*, temp/main3.py, temp/main4.py"
          cov-threshold-single: ${{ env.COVERAGE_SINGLE }}
          cov-threshold-total: ${{ env.COVERAGE_TOTAL }}

      - name: Coverage single fail - new issue
        if: ${{ steps.pytester-cov.outputs.cov-threshold-single-fail == 'true' }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Pytest coverage single falls below minimum ${{ env.COVERAGE_SINGLE }}
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: workflow-failed
          body: ${{ steps.pytester-cov.outputs.output-table }}

      - name: Coverage single fail - exit
        if: ${{ steps.pytester-cov.outputs.cov-threshold-single-fail == 'true' }}
        run: |
          echo "cov single fail ${{ steps.pytester-cov.outputs.cov-threshold-single-fail }}"
          exit 1

      - name: Coverage total fail - new issue
        if: ${{ steps.pytester-cov.outputs.cov-threshold-total-fail == 'true' }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Pytest coverage total falls below minimum ${{ env.COVERAGE_TOTAL }}
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: workflow-failed
          body: ${{ steps.pytester-cov.outputs.output-table }}

      - name: Coverage total fail - exit
        if: ${{ steps.pytester-cov.outputs.cov-threshold-total-fail == 'true' }}
        run: |
          echo "cov single fail ${{ steps.pytester-cov.outputs.cov-threshold-total-fail }}"
          exit 1

      - name: Commit pytest coverage table
        uses: peter-evans/commit-comment@v1
        with:
          body: ${{ steps.pytester-cov.outputs.output-table }}

      - name: Format code with black
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: "."

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.27
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report.xml
