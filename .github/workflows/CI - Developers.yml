name: CI for test

on:
  pull_request:
    branches: [development]

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          repository: notyumin/SimpCity
          token: ${{ secrets.NOTYUMIN_PAT }}

      - name: Setup Python 3.8 test
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Format using black
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: "."
      
      - name: Push formatted changes
        if: steps.action_black.outputs.is_formatted == 'true'
        run: |
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -am "Formatted code"
            git push origin HEAD:${{ github.head_ref }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov colorama pyfakefs

      - name: Config git
        run: | 
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin ${{ github.head_ref }} --rebase

      - name: Begin Pytest
        run: |
          pytest --cov -v --junitxml=report.xml
      - if: ${{failure()}}
        name: Create Issues
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Build Failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: workflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.24
        if: always()
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          files: report.xml
